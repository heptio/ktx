#!/usr/bin/env bash

# Copyright 2017 Heptio Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

KUBECONFIG_DIR=${KUBECONFIG_DIR:-"${HOME}/.kube/"}

ktx() {
    # Test that we have a ${KUBECONFIG_DIR} to work with
    if [ ! -d "${KUBECONFIG_DIR}" ]; then
        echo "echo \"The following directory does not exist: ${KUBECONFIG_DIR}. Exiting...\""
        return 1
    fi

    # Verify our ${KUBECONFIG_DIR} isn't empty
    if [ -z "$(ls -A ${KUBECONFIG_DIR})" ]; then
        echo "echo \"No configs present in ${KUBECONFIG_DIR}. Exiting...\""
        return 1
    fi

    # If no argument was given then list the files in ${KUBECONFIG_DIR}
    if [ -z "$1" ]; then
      for kube in $(find "${KUBECONFIG_DIR}" -maxdepth 1 -type f -o -type l); do
        if [[ "${KUBECONFIG}" == "$kube" ]]; then
          echo -n "(active) "
        fi
        echo $(basename "${kube}")
      done

      return
    fi

    # If argument is "None" then unset the KUBECONFIG variable
    if [[ "$1" == "none" ]] || [[ "$1" == "None" ]]; then
        unset KUBECONFIG
        return
    fi

    # Verify config exists
    if [ -e "${KUBECONFIG_DIR}/${1}" ]; then
        export KUBECONFIG="${KUBECONFIG_DIR}/${1}"
    else
        echo "echo \"The following file does not exist: ${KUBECONFIG_DIR}/${1}. Exiting...\""
        return 1
    fi
}
